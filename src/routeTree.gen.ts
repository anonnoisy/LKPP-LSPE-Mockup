/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/app/route'
import { Route as IndexImport } from './routes/index'
import { Route as AppMarketplaceCategoryIndexImport } from './routes/app/marketplace/$category/index'
import { Route as AppMarketplaceCategoryMarketplaceImport } from './routes/app/marketplace/$category/$marketplace'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppMarketplaceCategoryIndexRoute =
  AppMarketplaceCategoryIndexImport.update({
    id: '/marketplace/$category/',
    path: '/marketplace/$category/',
    getParentRoute: () => AppRouteRoute,
  } as any)

const AppMarketplaceCategoryMarketplaceRoute =
  AppMarketplaceCategoryMarketplaceImport.update({
    id: '/marketplace/$category/$marketplace',
    path: '/marketplace/$category/$marketplace',
    getParentRoute: () => AppRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/app/marketplace/$category/$marketplace': {
      id: '/app/marketplace/$category/$marketplace'
      path: '/marketplace/$category/$marketplace'
      fullPath: '/app/marketplace/$category/$marketplace'
      preLoaderRoute: typeof AppMarketplaceCategoryMarketplaceImport
      parentRoute: typeof AppRouteImport
    }
    '/app/marketplace/$category/': {
      id: '/app/marketplace/$category/'
      path: '/marketplace/$category'
      fullPath: '/app/marketplace/$category'
      preLoaderRoute: typeof AppMarketplaceCategoryIndexImport
      parentRoute: typeof AppRouteImport
    }
  }
}

// Create and export the route tree

interface AppRouteRouteChildren {
  AppMarketplaceCategoryMarketplaceRoute: typeof AppMarketplaceCategoryMarketplaceRoute
  AppMarketplaceCategoryIndexRoute: typeof AppMarketplaceCategoryIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppMarketplaceCategoryMarketplaceRoute:
    AppMarketplaceCategoryMarketplaceRoute,
  AppMarketplaceCategoryIndexRoute: AppMarketplaceCategoryIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/app/marketplace/$category/$marketplace': typeof AppMarketplaceCategoryMarketplaceRoute
  '/app/marketplace/$category': typeof AppMarketplaceCategoryIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/app/marketplace/$category/$marketplace': typeof AppMarketplaceCategoryMarketplaceRoute
  '/app/marketplace/$category': typeof AppMarketplaceCategoryIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/app/marketplace/$category/$marketplace': typeof AppMarketplaceCategoryMarketplaceRoute
  '/app/marketplace/$category/': typeof AppMarketplaceCategoryIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/app/marketplace/$category/$marketplace'
    | '/app/marketplace/$category'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/app/marketplace/$category/$marketplace'
    | '/app/marketplace/$category'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/app/marketplace/$category/$marketplace'
    | '/app/marketplace/$category/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/app": {
      "filePath": "app/route.tsx",
      "children": [
        "/app/marketplace/$category/$marketplace",
        "/app/marketplace/$category/"
      ]
    },
    "/app/marketplace/$category/$marketplace": {
      "filePath": "app/marketplace/$category/$marketplace.tsx",
      "parent": "/app"
    },
    "/app/marketplace/$category/": {
      "filePath": "app/marketplace/$category/index.tsx",
      "parent": "/app"
    }
  }
}
ROUTE_MANIFEST_END */
